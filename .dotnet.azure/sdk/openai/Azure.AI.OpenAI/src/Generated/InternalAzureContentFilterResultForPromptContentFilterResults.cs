// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.OpenAI
{
    internal partial class InternalAzureContentFilterResultForPromptContentFilterResults
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        internal InternalAzureContentFilterResultForPromptContentFilterResults(ContentFilterDetectionResult jailbreak, ContentFilterDetectionResult indirectAttack)
        {
            Jailbreak = jailbreak;
            IndirectAttack = indirectAttack;
        }

        internal InternalAzureContentFilterResultForPromptContentFilterResults(ContentFilterSeverityResult sexual, ContentFilterSeverityResult hate, ContentFilterSeverityResult violence, ContentFilterSeverityResult selfHarm, ContentFilterDetectionResult profanity, ContentFilterBlocklistResult customBlocklists, InternalAzureContentFilterResultForChoiceError error, ContentFilterDetectionResult jailbreak, ContentFilterDetectionResult indirectAttack, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Sexual = sexual;
            Hate = hate;
            Violence = violence;
            SelfHarm = selfHarm;
            Profanity = profanity;
            CustomBlocklists = customBlocklists;
            Error = error;
            Jailbreak = jailbreak;
            IndirectAttack = indirectAttack;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        internal ContentFilterSeverityResult Sexual { get; set; }

        internal ContentFilterSeverityResult Hate { get; set; }

        internal ContentFilterSeverityResult Violence { get; set; }

        internal ContentFilterSeverityResult SelfHarm { get; set; }

        internal ContentFilterDetectionResult Profanity { get; set; }

        internal ContentFilterBlocklistResult CustomBlocklists { get; set; }

        internal InternalAzureContentFilterResultForChoiceError Error { get; set; }

        internal ContentFilterDetectionResult Jailbreak { get; set; }

        internal ContentFilterDetectionResult IndirectAttack { get; set; }

        internal IDictionary<string, BinaryData> SerializedAdditionalRawData
        {
            get => _additionalBinaryDataProperties;
            set => _additionalBinaryDataProperties = value;
        }
    }
}
