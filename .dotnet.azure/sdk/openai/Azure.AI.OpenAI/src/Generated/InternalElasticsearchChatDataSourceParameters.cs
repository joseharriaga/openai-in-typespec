// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.AI.OpenAI;

namespace Azure.AI.OpenAI.Chat
{
    internal partial class InternalElasticsearchChatDataSourceParameters
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        public InternalElasticsearchChatDataSourceParameters(Uri endpoint, string indexName, DataSourceAuthentication authentication)
        {
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            Argument.AssertNotNull(indexName, nameof(indexName));
            Argument.AssertNotNull(authentication, nameof(authentication));

            Endpoint = endpoint;
            IndexName = indexName;
            InternalIncludeContexts = new ChangeTrackingList<string>();
            Authentication = authentication;
        }

        internal InternalElasticsearchChatDataSourceParameters(int? topNDocuments, bool? inScope, int? strictness, int? maxSearchQueries, bool? allowPartialResult, Uri endpoint, string indexName, IList<string> internalIncludeContexts, DataSourceAuthentication authentication, DataSourceFieldMappings fieldMappings, DataSourceQueryType? queryType, DataSourceVectorizer vectorizationSource, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            TopNDocuments = topNDocuments;
            InScope = inScope;
            Strictness = strictness;
            MaxSearchQueries = maxSearchQueries;
            AllowPartialResult = allowPartialResult;
            Endpoint = endpoint;
            IndexName = indexName;
            InternalIncludeContexts = internalIncludeContexts;
            Authentication = authentication;
            FieldMappings = fieldMappings;
            QueryType = queryType;
            VectorizationSource = vectorizationSource;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        public int? TopNDocuments { get; set; }

        public bool? InScope { get; set; }

        public int? Strictness { get; set; }

        public int? MaxSearchQueries { get; set; }

        public bool? AllowPartialResult { get; set; }

        internal Uri Endpoint { get; set; }

        internal string IndexName { get; set; }

        internal IDictionary<string, BinaryData> SerializedAdditionalRawData
        {
            get => _additionalBinaryDataProperties;
            set => _additionalBinaryDataProperties = value;
        }
    }
}
