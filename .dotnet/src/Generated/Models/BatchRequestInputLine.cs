// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace OpenAI.Internal.Models
{
    /// <summary> The per-line object in a batch input file. </summary>
    internal partial class BatchRequestInputLine
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="BatchRequestInputLine"/>. </summary>
        /// <param name="customId">
        /// A developer-provided, per-request ID that will be used to match inputs to outputs. Must be
        /// unique for each request in a batch.
        /// </param>
        /// <param name="method">
        /// The HTTP method to be used for the request.
        ///
        /// Currently, only 'POST' is supported.
        /// </param>
        /// <param name="url">
        /// The OpenAI API relative URL to be used for the request.
        ///
        /// Currently, only '/v1/chat/completions' is supported.
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="customId"/>, <paramref name="method"/> or <paramref name="url"/> is null. </exception>
        internal BatchRequestInputLine(string customId, string method, string url)
        {
            Argument.AssertNotNull(customId, nameof(customId));
            Argument.AssertNotNull(method, nameof(method));
            Argument.AssertNotNull(url, nameof(url));

            CustomId = customId;
            Method = method;
            Url = url;
        }

        /// <summary> Initializes a new instance of <see cref="BatchRequestInputLine"/>. </summary>
        /// <param name="customId">
        /// A developer-provided, per-request ID that will be used to match inputs to outputs. Must be
        /// unique for each request in a batch.
        /// </param>
        /// <param name="method">
        /// The HTTP method to be used for the request.
        ///
        /// Currently, only 'POST' is supported.
        /// </param>
        /// <param name="url">
        /// The OpenAI API relative URL to be used for the request.
        ///
        /// Currently, only '/v1/chat/completions' is supported.
        /// </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal BatchRequestInputLine(string customId, string method, string url, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            CustomId = customId;
            Method = method;
            Url = url;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="BatchRequestInputLine"/> for deserialization. </summary>
        internal BatchRequestInputLine()
        {
        }

        /// <summary>
        /// A developer-provided, per-request ID that will be used to match inputs to outputs. Must be
        /// unique for each request in a batch.
        /// </summary>
        public string CustomId { get; }
        /// <summary>
        /// The HTTP method to be used for the request.
        ///
        /// Currently, only 'POST' is supported.
        /// </summary>
        public string Method { get; }
        /// <summary>
        /// The OpenAI API relative URL to be used for the request.
        ///
        /// Currently, only '/v1/chat/completions' is supported.
        /// </summary>
        public string Url { get; }
    }
}
