// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace OpenAI.Internal.Models
{
    /// <summary> A chat completion delta generated by streamed model responses. </summary>
    internal partial class ChatCompletionStreamResponseDelta
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="ChatCompletionStreamResponseDelta"/>. </summary>
        internal ChatCompletionStreamResponseDelta()
        {
            ToolCalls = new ChangeTrackingList<ChatCompletionMessageToolCallChunk>();
        }

        /// <summary> Initializes a new instance of <see cref="ChatCompletionStreamResponseDelta"/>. </summary>
        /// <param name="content"> The contents of the chunk message. </param>
        /// <param name="functionCall"> Deprecated and replaced by `tool_calls`. The name and arguments of a function that should be called, as generated by the model. </param>
        /// <param name="toolCalls"></param>
        /// <param name="role"> The role of the author of this message. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal ChatCompletionStreamResponseDelta(string content, ChatCompletionStreamResponseDeltaFunctionCall functionCall, IReadOnlyList<ChatCompletionMessageToolCallChunk> toolCalls, string role, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Content = content;
            FunctionCall = functionCall;
            ToolCalls = toolCalls;
            Role = role;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> The contents of the chunk message. </summary>
        public string Content { get; }
        /// <summary> Deprecated and replaced by `tool_calls`. The name and arguments of a function that should be called, as generated by the model. </summary>
        public ChatCompletionStreamResponseDeltaFunctionCall FunctionCall { get; }
        /// <summary> Gets the tool calls. </summary>
        public IReadOnlyList<ChatCompletionMessageToolCallChunk> ToolCalls { get; }
        /// <summary> The role of the author of this message. </summary>
        public string Role { get; }
    }
}
