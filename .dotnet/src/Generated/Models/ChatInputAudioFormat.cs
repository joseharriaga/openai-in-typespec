// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace OpenAI.Chat
{
    public readonly partial struct ChatInputAudioFormat : IEquatable<ChatInputAudioFormat>
    {
        private readonly string _value;

        public ChatInputAudioFormat(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string WavValue = "wav";
        private const string Mp3Value = "mp3";

        public static ChatInputAudioFormat Wav { get; } = new ChatInputAudioFormat(WavValue);
        public static ChatInputAudioFormat Mp3 { get; } = new ChatInputAudioFormat(Mp3Value);
        public static bool operator ==(ChatInputAudioFormat left, ChatInputAudioFormat right) => left.Equals(right);
        public static bool operator !=(ChatInputAudioFormat left, ChatInputAudioFormat right) => !left.Equals(right);
        public static implicit operator ChatInputAudioFormat(string value) => new ChatInputAudioFormat(value);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is ChatInputAudioFormat other && Equals(other);
        public bool Equals(ChatInputAudioFormat other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        public override string ToString() => _value;
    }
}
