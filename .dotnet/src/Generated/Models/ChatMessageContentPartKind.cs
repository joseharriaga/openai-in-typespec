// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace OpenAI.Chat
{
    public readonly partial struct ChatMessageContentPartKind : IEquatable<ChatMessageContentPartKind>
    {
        private readonly string _value;

        public ChatMessageContentPartKind(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string TextValue = "text";
        private const string ImageValue = "image_url";
        private const string RefusalValue = "refusal";

        public static ChatMessageContentPartKind Text { get; } = new ChatMessageContentPartKind(TextValue);
        public static ChatMessageContentPartKind Refusal { get; } = new ChatMessageContentPartKind(RefusalValue);
        public static bool operator ==(ChatMessageContentPartKind left, ChatMessageContentPartKind right) => left.Equals(right);
        public static bool operator !=(ChatMessageContentPartKind left, ChatMessageContentPartKind right) => !left.Equals(right);
        public static implicit operator ChatMessageContentPartKind(string value) => new ChatMessageContentPartKind(value);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is ChatMessageContentPartKind other && Equals(other);
        public bool Equals(ChatMessageContentPartKind other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        public override string ToString() => _value;
    }
}
