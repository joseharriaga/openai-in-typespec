// <auto-generated/>

#nullable disable

using System;

namespace OpenAI.RealtimeConversation
{
    internal static partial class ConversationUpdateKindExtensions
    {
        public static string ToSerialString(this ConversationResponseKind value) => value switch
        {
            ConversationResponseKind.SessionStarted => "session.created",
            ConversationResponseKind.SessionConfigured => "session.updated",
            ConversationResponseKind.ItemAcknowledged => "conversation.item.created",
            ConversationResponseKind.ItemDeleted => "conversation.item.deleted",
            ConversationResponseKind.ItemTruncated => "conversation.item.truncated",
            ConversationResponseKind.ResponseStarted => "response.created",
            ConversationResponseKind.ResponseFinished => "response.done",
            ConversationResponseKind.RateLimitsUpdated => "rate_limits.updated",
            ConversationResponseKind.ItemStarted => "response.output_item.added",
            ConversationResponseKind.ItemFinished => "response.output_item.done",
            ConversationResponseKind.ContentPartStarted => "response.content_part.added",
            ConversationResponseKind.ContentPartFinished => "response.content_part.done",
            ConversationResponseKind.ResponseAudioDelta => "response.audio.delta",
            ConversationResponseKind.ResponseAudioDone => "response.audio.done",
            ConversationResponseKind.ResponseAudioTranscriptDelta => "response.audio_transcript.delta",
            ConversationResponseKind.ResponseAudioTranscriptDone => "response.audio_transcript.done",
            ConversationResponseKind.ResponseTextDelta => "response.text.delta",
            ConversationResponseKind.ResponseTextDone => "response.text.done",
            ConversationResponseKind.ResponseFunctionCallArgumentsDelta => "response.function_call_arguments.delta",
            ConversationResponseKind.ResponseFunctionCallArgumentsDone => "response.function_call_arguments.done",
            ConversationResponseKind.InputAudioBufferSpeechStarted => "input_audio_buffer.speech_started",
            ConversationResponseKind.InputAudioBufferSpeechStopped => "input_audio_buffer.speech_stopped",
            ConversationResponseKind.ItemInputAudioTranscriptionCompleted => "conversation.item.input_audio_transcription.completed",
            ConversationResponseKind.ItemInputAudioTranscriptionFailed => "conversation.item.input_audio_transcription.failed",
            ConversationResponseKind.InputAudioBufferCommitted => "input_audio_buffer.committed",
            ConversationResponseKind.InputAudioBufferCleared => "input_audio_buffer.cleared",
            ConversationResponseKind.Error => "error",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown ConversationUpdateKind value.")
        };

        public static ConversationResponseKind ToConversationUpdateKind(this string value)
        {
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "session.created")) return ConversationResponseKind.SessionStarted;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "session.updated")) return ConversationResponseKind.SessionConfigured;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "conversation.item.created")) return ConversationResponseKind.ItemAcknowledged;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "conversation.item.deleted")) return ConversationResponseKind.ItemDeleted;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "conversation.item.truncated")) return ConversationResponseKind.ItemTruncated;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "response.created")) return ConversationResponseKind.ResponseStarted;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "response.done")) return ConversationResponseKind.ResponseFinished;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "rate_limits.updated")) return ConversationResponseKind.RateLimitsUpdated;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "response.output_item.added")) return ConversationResponseKind.ItemStarted;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "response.output_item.done")) return ConversationResponseKind.ItemFinished;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "response.content_part.added")) return ConversationResponseKind.ContentPartStarted;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "response.content_part.done")) return ConversationResponseKind.ContentPartFinished;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "response.audio.delta")) return ConversationResponseKind.ResponseAudioDelta;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "response.audio.done")) return ConversationResponseKind.ResponseAudioDone;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "response.audio_transcript.delta")) return ConversationResponseKind.ResponseAudioTranscriptDelta;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "response.audio_transcript.done")) return ConversationResponseKind.ResponseAudioTranscriptDone;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "response.text.delta")) return ConversationResponseKind.ResponseTextDelta;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "response.text.done")) return ConversationResponseKind.ResponseTextDone;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "response.function_call_arguments.delta")) return ConversationResponseKind.ResponseFunctionCallArgumentsDelta;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "response.function_call_arguments.done")) return ConversationResponseKind.ResponseFunctionCallArgumentsDone;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "input_audio_buffer.speech_started")) return ConversationResponseKind.InputAudioBufferSpeechStarted;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "input_audio_buffer.speech_stopped")) return ConversationResponseKind.InputAudioBufferSpeechStopped;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "conversation.item.input_audio_transcription.completed")) return ConversationResponseKind.ItemInputAudioTranscriptionCompleted;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "conversation.item.input_audio_transcription.failed")) return ConversationResponseKind.ItemInputAudioTranscriptionFailed;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "input_audio_buffer.committed")) return ConversationResponseKind.InputAudioBufferCommitted;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "input_audio_buffer.cleared")) return ConversationResponseKind.InputAudioBufferCleared;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "error")) return ConversationResponseKind.Error;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown ConversationUpdateKind value.");
        }
    }
}
