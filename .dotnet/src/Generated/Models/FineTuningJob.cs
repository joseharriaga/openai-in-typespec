// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace OpenAI.FineTuning
{
    public partial class FineTuningJob
    {
        internal IDictionary<string, BinaryData> SerializedAdditionalRawData { get; set; }
        internal FineTuningJob(string jobId, DateTimeOffset createdAt, FineTuningJobError error, string fineTunedModel, DateTimeOffset? finishedAt, FineTuningJobHyperparameters hyperparameters, string baseModel, string organizationId, IEnumerable<string> resultFileIds, FineTuningJobStatus status, int? billableTrainedTokens, string trainingFileId, string validationFileId, int seed)
        {
            Argument.AssertNotNull(jobId, nameof(jobId));
            Argument.AssertNotNull(baseModel, nameof(baseModel));
            Argument.AssertNotNull(organizationId, nameof(organizationId));
            Argument.AssertNotNull(resultFileIds, nameof(resultFileIds));
            Argument.AssertNotNull(trainingFileId, nameof(trainingFileId));

            JobId = jobId;
            CreatedAt = createdAt;
            Error = error;
            FineTunedModel = fineTunedModel;
            FinishedAt = finishedAt;
            Hyperparameters = hyperparameters;
            BaseModel = baseModel;
            OrganizationId = organizationId;
            ResultFileIds = resultFileIds.ToList();
            Status = status;
            BillableTrainedTokens = billableTrainedTokens;
            TrainingFileId = trainingFileId;
            ValidationFileId = validationFileId;
            Integrations = new ChangeTrackingList<FineTuningIntegration>();
            Seed = seed;
        }

        internal FineTuningJob(string userProvidedSuffix, string jobId, DateTimeOffset createdAt, FineTuningJobError error, string fineTunedModel, DateTimeOffset? finishedAt, FineTuningJobHyperparameters hyperparameters, string baseModel, string @object, string organizationId, IReadOnlyList<string> resultFileIds, FineTuningJobStatus status, int? billableTrainedTokens, string trainingFileId, string validationFileId, IReadOnlyList<FineTuningIntegration> integrations, int seed, DateTimeOffset? estimatedFinishAt, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            UserProvidedSuffix = userProvidedSuffix;
            JobId = jobId;
            CreatedAt = createdAt;
            Error = error;
            FineTunedModel = fineTunedModel;
            FinishedAt = finishedAt;
            Hyperparameters = hyperparameters;
            BaseModel = baseModel;
            _object = @object;
            OrganizationId = organizationId;
            ResultFileIds = resultFileIds;
            Status = status;
            BillableTrainedTokens = billableTrainedTokens;
            TrainingFileId = trainingFileId;
            ValidationFileId = validationFileId;
            Integrations = integrations;
            Seed = seed;
            EstimatedFinishAt = estimatedFinishAt;
            SerializedAdditionalRawData = serializedAdditionalRawData;
        }

        internal FineTuningJob()
        {
        }

        public string UserProvidedSuffix { get; }
        public DateTimeOffset CreatedAt { get; }
        public FineTuningJobError Error { get; }
        public string FineTunedModel { get; }
        public DateTimeOffset? FinishedAt { get; }

        public string OrganizationId { get; }
        public int Seed { get; }
    }
}
