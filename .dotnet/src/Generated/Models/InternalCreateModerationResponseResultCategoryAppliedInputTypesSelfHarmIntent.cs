// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace OpenAI.Moderations
{
    internal readonly partial struct InternalCreateModerationResponseResultCategoryAppliedInputTypesSelfHarmIntent : IEquatable<InternalCreateModerationResponseResultCategoryAppliedInputTypesSelfHarmIntent>
    {
        private readonly string _value;

        public InternalCreateModerationResponseResultCategoryAppliedInputTypesSelfHarmIntent(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string TextValue = "text";
        private const string ImageValue = "image";

        public static InternalCreateModerationResponseResultCategoryAppliedInputTypesSelfHarmIntent Text { get; } = new InternalCreateModerationResponseResultCategoryAppliedInputTypesSelfHarmIntent(TextValue);
        public static InternalCreateModerationResponseResultCategoryAppliedInputTypesSelfHarmIntent Image { get; } = new InternalCreateModerationResponseResultCategoryAppliedInputTypesSelfHarmIntent(ImageValue);
        public static bool operator ==(InternalCreateModerationResponseResultCategoryAppliedInputTypesSelfHarmIntent left, InternalCreateModerationResponseResultCategoryAppliedInputTypesSelfHarmIntent right) => left.Equals(right);
        public static bool operator !=(InternalCreateModerationResponseResultCategoryAppliedInputTypesSelfHarmIntent left, InternalCreateModerationResponseResultCategoryAppliedInputTypesSelfHarmIntent right) => !left.Equals(right);
        public static implicit operator InternalCreateModerationResponseResultCategoryAppliedInputTypesSelfHarmIntent(string value) => new InternalCreateModerationResponseResultCategoryAppliedInputTypesSelfHarmIntent(value);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is InternalCreateModerationResponseResultCategoryAppliedInputTypesSelfHarmIntent other && Equals(other);
        public bool Equals(InternalCreateModerationResponseResultCategoryAppliedInputTypesSelfHarmIntent other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        public override string ToString() => _value;
    }
}
