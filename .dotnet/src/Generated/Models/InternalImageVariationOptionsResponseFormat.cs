// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace OpenAI.Images
{
    internal readonly partial struct InternalImageVariationOptionsResponseFormat : IEquatable<InternalImageVariationOptionsResponseFormat>
    {
        private readonly string _value;

        public InternalImageVariationOptionsResponseFormat(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string UrlValue = "url";
        private const string B64JsonValue = "b64_json";

        public static InternalImageVariationOptionsResponseFormat Url { get; } = new InternalImageVariationOptionsResponseFormat(UrlValue);
        public static InternalImageVariationOptionsResponseFormat B64Json { get; } = new InternalImageVariationOptionsResponseFormat(B64JsonValue);
        public static bool operator ==(InternalImageVariationOptionsResponseFormat left, InternalImageVariationOptionsResponseFormat right) => left.Equals(right);
        public static bool operator !=(InternalImageVariationOptionsResponseFormat left, InternalImageVariationOptionsResponseFormat right) => !left.Equals(right);
        public static implicit operator InternalImageVariationOptionsResponseFormat(string value) => new InternalImageVariationOptionsResponseFormat(value);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is InternalImageVariationOptionsResponseFormat other && Equals(other);
        public bool Equals(InternalImageVariationOptionsResponseFormat other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        public override string ToString() => _value;
    }
}
