// <auto-generated/>

using System;
using System.ComponentModel;

namespace OpenAI.Internal.Models
{
    /// <summary> Enum for status in MessageObject. </summary>
    internal readonly partial struct MessageObjectStatus : IEquatable<MessageObjectStatus>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="MessageObjectStatus"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public MessageObjectStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string InProgressValue = "in_progress";
        private const string IncompleteValue = "incomplete";
        private const string CompletedValue = "completed";

        /// <summary> in_progress. </summary>
        public static MessageObjectStatus InProgress { get; } = new MessageObjectStatus(InProgressValue);
        /// <summary> incomplete. </summary>
        public static MessageObjectStatus Incomplete { get; } = new MessageObjectStatus(IncompleteValue);
        /// <summary> completed. </summary>
        public static MessageObjectStatus Completed { get; } = new MessageObjectStatus(CompletedValue);
        /// <summary> Determines if two <see cref="MessageObjectStatus"/> values are the same. </summary>
        public static bool operator ==(MessageObjectStatus left, MessageObjectStatus right) => left.Equals(right);
        /// <summary> Determines if two <see cref="MessageObjectStatus"/> values are not the same. </summary>
        public static bool operator !=(MessageObjectStatus left, MessageObjectStatus right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="MessageObjectStatus"/>. </summary>
        public static implicit operator MessageObjectStatus(string value) => new MessageObjectStatus(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is MessageObjectStatus other && Equals(other);
        /// <inheritdoc />
        public bool Equals(MessageObjectStatus other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
