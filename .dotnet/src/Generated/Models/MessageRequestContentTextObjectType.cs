// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace OpenAI.Internal.Models
{
    /// <summary> The MessageRequestContentTextObject_type. </summary>
    internal readonly partial struct MessageRequestContentTextObjectType : IEquatable<MessageRequestContentTextObjectType>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="MessageRequestContentTextObjectType"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public MessageRequestContentTextObjectType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string TextValue = "text";

        /// <summary> text. </summary>
        public static MessageRequestContentTextObjectType Text { get; } = new MessageRequestContentTextObjectType(TextValue);
        /// <summary> Determines if two <see cref="MessageRequestContentTextObjectType"/> values are the same. </summary>
        public static bool operator ==(MessageRequestContentTextObjectType left, MessageRequestContentTextObjectType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="MessageRequestContentTextObjectType"/> values are not the same. </summary>
        public static bool operator !=(MessageRequestContentTextObjectType left, MessageRequestContentTextObjectType right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="MessageRequestContentTextObjectType"/>. </summary>
        public static implicit operator MessageRequestContentTextObjectType(string value) => new MessageRequestContentTextObjectType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is MessageRequestContentTextObjectType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(MessageRequestContentTextObjectType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
